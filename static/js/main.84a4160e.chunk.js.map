{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","App","useState","input","setInput","isInputError","setIsInputError","select","setSelect","selectError","setSelectError","todosFromServer","usersFromServer","find","setTodos","action","method","onSubmit","event","preventDefault","console","log","task","tasks","sort","firstTask","secondTask","oldTodos","value","type","placeholder","onChange","inputEvent","target","length","selectEvent","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84a4160e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={`TodoInfo TodoInfo${completed ? '--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nfunction getTaskById(tasks:Todo[]) {\n  return tasks.sort((firstTask, secondTask) => secondTask.id\n  - firstTask.id)[0].id + 1;\n}\n\nexport const App = () => {\n  const [input, setInput] = useState('');\n  const [isInputError, setIsInputError] = useState(false);\n  const [select, setSelect] = useState('');\n  const [selectError, setSelectError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer.map(\n    ({\n      id, title, completed, userId,\n    }) => ({\n      id,\n      title,\n      completed,\n      user: usersFromServer.find(user => user.id === userId) || null,\n    }),\n  ));\n\n  const handleSubmit: FormEventHandler = event => {\n    event.preventDefault();\n    // eslint-disable-next-line no-console\n    console.log(input, select);\n\n    if (!input) {\n      setIsInputError(true);\n    } else {\n      setIsInputError(false);\n    }\n\n    if (!select) {\n      setSelectError(true);\n    } else {\n      setSelectError(false);\n    }\n\n    if (input && select) {\n      const task: Todo = {\n        id: getTaskById(todos),\n        title: input,\n        completed: false,\n        user: usersFromServer.find(user => user.name === select) || null,\n      };\n\n      if (task) {\n        setTodos(oldTodos => [...oldTodos, task]);\n      }\n\n      setSelect('');\n      setInput('');\n    }\n  };\n\n  const handleSetSelect = (value:string) => {\n    setSelect(value);\n    setSelectError(!(value.length > 0));\n  };\n\n  const handleSetTitle = (value:string) => {\n    setInput(value);\n    setIsInputError(!(value.length > 0));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            value={input}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter task title\"\n            onChange={inputEvent => handleSetTitle(inputEvent.target.value)}\n          />\n          {isInputError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={select}\n            data-cy=\"userSelect\"\n            onChange={selectEvent => handleSetSelect(selectEvent.target.value)}\n          >\n            <option value=\"\" disabled selected>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={name}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {selectError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}